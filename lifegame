import matplotlib.pyplot as plt
import numpy as np
import matplotlib.animation as animation
from IPython.display import HTML
import time

CELL_SIZE = 10
LOOP_NUM =  10

plt.ion()

figure, ax = plt.subplots(figsize=(3,3))

ax.axis("off")

arr = np.random.randint(0, 2, (CELL_SIZE, CELL_SIZE))
ims=[]
frames = []
for i in range(0,LOOP_NUM):
    #title="frame="+str(i)
    #plt.title(title)
    title = ax.text(0.5, 1.01, 'frame='+str(i),
                 ha='center', va='bottom',
                 transform=ax.transAxes, fontsize='large')
    next_arr = np.zeros((CELL_SIZE,CELL_SIZE))
    for x in range(0,arr.shape[0]):
        for y in range(0,arr.shape[1]):
            #Sprint(i,x,y)
            if x == 0:
                Xm1=CELL_SIZE-1
                X  =x
                Xp1=x+1
            elif x == CELL_SIZE-1:
                Xm1=x-1
                X  =x
                Xp1=0
            else:
                Xm1=x-1
                X  =x
                Xp1=x+1
                
                
            if y == 0:
                Ym1=CELL_SIZE-1
                Y  =y
                Yp1=y+1
            elif y == CELL_SIZE-1:
                Ym1=y-1
                Y  =y
                Yp1=0
            else:
                Ym1=y-1
                Y  =y
                Yp1=y+1
            
            alive_num = arr[Xm1,Ym1] + arr[X,Ym1] + arr[Xp1,Ym1] + arr[Xm1,Y] + arr[Xp1,Y]+ arr[Xm1,Yp1] + arr[X,Yp1] + arr[Xp1,Yp1]
            #誕生
            #死んでいるセルに隣接する生きたセルがちょうど3つあれば、次の世代が誕生する。
            if arr[X,Y] == 0 and alive_num == 3:
                  next_arr[X,Y] = 1
            #生存
            #生きているセルに隣接する生きたセルが2つか3つならば、次の世代でも生存する。
            elif arr[X,Y] == 1 and alive_num in [2,3]:
                  next_arr[X,Y] = 1
            #過疎
            #生きているセルに隣接する生きたセルが1つ以下ならば、過疎により死滅する。
            elif arr[X,Y] == 1 and alive_num <= 1:
                  next_arr[X,Y] = 0    
            #過密
            #生きているセルに隣接する生きたセルが4つ以上ならば、過密により死滅する。
            elif arr[X,Y] == 1 and alive_num >= 4:
                  next_arr[X,Y] = 0
    
    arr=next_arr
    
    line=plt.imshow(arr)
    ims.append([line,title])
    
    #figure.canvas.draw()
         
    #figure.canvas.flush_events()
    #figure.clf
    #time.sleep(0.1)
    
    
    print(i)

ani = animation.ArtistAnimation(figure, ims, interval=1)
#plt.show()
# pathlibモジュールでパスを作成する
ani.save("test.gif",writer='pillow')

plt.close()
        
